version: 2.1
orbs: #packages
  node: circleci/node@5.0.1
  docker: circleci/docker@2.1.4 #allows us to use docker orb's commands
  heroku: circleci/heroku@2.0.0 #allows us to use heroku orb's commands
  snyk: snyk/snyk@1.5.0 #3rd party orb of snyk
jobs: #instructions for each step
  build: #build the application, ie install dependencies
    docker: #container to handle to steps
      - image: cimg/node:16.10
    steps:
      - checkout #copies the working directory of the project
      - node/install-packages:
          pkg-manager: npm
      - run: |
          echo "Installing dependencies..."
          npm install
  test:
    docker:
      - image: cimg/node:16.10
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run: |
          echo "Running tests..."
          npm run test
  build-and-push:
    executor: docker/docker #State the environment that we're use
    steps:
      - setup_remote_docker #This allows use to run docker commands just in case
      - checkout
      - docker/check
      - docker/build:
          image: vignesh991995/education-space
          tag: 1.0.1
      - docker/push:
          image: vignesh991995/education-space
          tag: 1.0.1

  scan:
    docker:
      - image: cimg/node:16.10
    environment:
      IMAGE_NAME: terencegaffudsu/education-space #the IMAGE_NAME is a variable we could use in our jobs/steps
    steps:
      - checkout
      - setup_remote_docker
      - docker/check
      - run: docker build -t $IMAGE_NAME . 
      # $IMAGE_NAME gets the value of the IMAGE_NAME from the environment defined above.
      - snyk/scan:
          docker-image-name: $IMAGE_NAME

  # deploy:
  #   docker:
  #     - image: cimg/node:16.10
  #   steps:
  #     - setup_remote_docker
  #     - heroku/install #installs heroku cli for our run command
  #     - checkout
  #     - run:
  #         name: Heroku Container Push #the name of the group of commands we are running
  #         command: |
  #           heroku container:login
  #           heroku container:push web -a vigneshnagamuthu-su-devops
  #           heroku container:release web -a vigneshnagamuthu-su-devops
  #       #The push command pushes the image to heroku's container registry
  #       #The release command deploys the image from heroku's container registry 

workflows: #defines how each job would run and relate to each other and 
            # any other dependent states (ex. only run if pushed to main branch)
  simple_workflow:
    jobs:
      - build #1st job
      - test: #2nd job
          requires:
            - build
      - build-and-push: #3rd job
          requires:
            - test
      # - deploy:
      #     requires:
      #       - build-and-push
      - scan:
          requires:
            - build
#mini-exercise - add the scan job so that it depends on build job